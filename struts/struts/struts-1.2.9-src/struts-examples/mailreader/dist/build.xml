<!--

 Copyright 2002,2004 The Apache Software Foundation.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

 $Id: build.xml 54942 2004-10-16 22:39:25Z craigmcc $

-->


<project name="Mail Reader Database Library" default="library" basedir=".">


  <!-- ===================== Initialize Property Values ==================== -->


  <!-- Initialize property values -->
  <property file="build.properties"/>
  <property file="../build.properties"/>
  <property file="../../build.properties"/>
  <property file="${user.home}/build.properties"/>

  <!-- Dependency home directory defaults -->
  <property name="server.home"      value="/usr/local/jakarta-tomcat-5.0.28"/>
  <property name="struts.home"      value="${basedir}/../../dist"/>


  <!-- Dependency library defaults -->
  <property name="commons-beanutils.jar"
                                    value="${struts.home}/lib/commons-beanutils.jar"/>
  <property name="commons-collections.jar"
                                    value="${struts.home}/lib/commons-collections.jar"/>
  <property name="commons-digester.jar"
                                    value="${struts.home}/lib/commons-digester.jar"/>
  <property name="commons-fileupload.jar"
                                    value="${struts.home}/lib/commons-fileupload.jar"/>
  <property name="commons-logging.jar"
                                    value="${struts.home}/lib/commons-logging.jar"/>
  <property name="commons-validator.jar"
                                    value="${struts.home}/lib/commons-validator.jar"/>
  <property name="jakarta-oro.jar"  value="${struts.home}/lib/jakarta-oro.jar"/>
  <property name="servlet.jar"      value="${server.home}/common/lib/servlet.jar"/>
  <property name="struts.jar"       value="${struts.home}/lib/struts.jar"/>


  <!-- Build Defaults -->
  <property name="build.home"      value="${basedir}/target"/>
  <property name="dist.home"       value="${basedir}/dist"/>
  <property name="project.name"    value="Mail Reader Database Library"/>
  <property name="project.package" value="org.apache.struts.examples.mailreader"/>
  <property name="project.version" value="0.1-dev"/>


  <!-- Compile Defaults -->
  <property name="compile.debug"           value="true"/>
  <property name="compile.deprecation"     value="false"/>
  <property name="compile.optimize"        value="true"/>


  <!-- Unit Test Defaults -->
  <property name="test.haltonerror"        value="true"/>
  <property name="test.haltonfailure"      value="true"/>
  <property name="test.runner"             value="junit.textui.TestRunner"/>

	<!-- This is only used if you execute "ant download-dependencies" -->
    <property name="libdir" value="../../lib" />

    <path id="downloaded.lib.classpath">
      <fileset dir="${libdir}">
        <include name="*.jar"/>
      </fileset>
    </path>

  <!-- Compile Classpath -->
  <path id="compile.classpath">
    <pathelement location="${commons-beanutils.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-digester.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${commons-validator.jar}"/>
    <pathelement location="${servlet.jar}"/>
    <pathelement location="${struts.jar}"/>
    <pathelement location="${build.home}/classes"/>

      <!-- this is harmless if not used -->
      <path refid="downloaded.lib.classpath"/>
      

  </path>


  <!-- Test Classpath -->
  <path id="test.classpath">
    <pathelement location="${commons-beanutils.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-digester.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${commons-validator.jar}"/>
    <pathelement location="${servlet.jar}"/>
    <pathelement location="${struts.jar}"/>
    <pathelement location="${junit.jar}"/>
    <pathelement location="${build.home}/classes"/>
    <pathelement location="${build.home}/test-classes"/>
  </path>


  <!-- ==================== Maintenance Targets ============================ -->


  <target     name="clean"
       description="Clean all build directories">
    <delete    dir="${build.home}"/>
    <delete    dir="${dist.home}"/>
  </target>


  <target     name="init">
    <echo  message="---------- ${project.name} ${project.version} -----------"/>
    <filter  token="name"     value="${project.name}"/>
    <filter  token="package"  value="${project.package}"/>
    <filter  token="state"    value="${systest.state.saving}"/>
    <filter  token="version"  value="${project.version}"/>
    <echo  message="server.home=     ${server.home}"/>
    <echo  message="struts.home=     ${struts.home}"/>
  </target>


  <target     name="prepare" depends="init">
    <mkdir     dir="${build.home}"/>
    <mkdir     dir="${build.home}/classes"/>
    <mkdir     dir="${build.home}/classes/META-INF"/>
    <mkdir     dir="${build.home}/conf"/>
    <mkdir     dir="${build.home}/lib"/>
    <mkdir     dir="${dist.home}"/>
    <mkdir     dir="${dist.home}/docs"/>
    <mkdir     dir="${dist.home}/docs/api"/>
  </target>


  <target     name="static" depends="prepare">
    <tstamp/>
    <copy    todir="${build.home}/conf"
         filtering="on">
      <fileset dir="src/conf"
          includes="*.MF"/>
    </copy>
  </target>


  <!-- =================== Compile Library Components ====================== -->


  <target         name="compile" depends="static"
           description="Compile example library">

    <!-- Compile Java Sources -->
    <javac      srcdir="src/java"
               destdir="${build.home}/classes"
                 debug="${compile.debug}"
           deprecation="${compile.deprecation}"
              optimize="${compile.optimize}">
      <classpath refid="compile.classpath" />
    </javac>

    <!-- Copy non-Java Sources -->
    <copy        todir="${build.home}/classes">
      <fileset     dir="src/java">
        <exclude  name="**/*.java"/>
      </fileset>
    </copy>

    <!-- Copy license and notice files -->
    <copy       tofile="${build.home}/classes/META-INF/LICENSE.txt"
                  file="LICENSE.txt"/>
    <copy       tofile="${build.home}/classes/META-INF/NOTICE.txt"
                  file="NOTICE.txt"/>

  </target>


  <target         name="library" depends="compile"
           description="Package example library">

    <jar       jarfile="${build.home}/lib/struts-mailreader.jar"
               basedir="${build.home}/classes"
              manifest="${build.home}/conf/MANIFEST.MF"/>

  </target>


  <!-- ===================== Generate Documentation ======================== -->


  <target         name="docs" depends="library"
           description="Create generated documentation and JavaDocs">

    <javadoc
            sourcepath="src/java"
               destdir="${dist.home}/docs/api"
                author="true"
               private="true"
               version="true"
          packagenames="org.apache.struts.*"
           windowtitle="${project.name} (Version ${project.version})"
              doctitle="${project.name} (Version ${project.version})"
                bottom="Copyright &#169; 2003-2004 - The Apache Software Foundation">
      <classpath refid="compile.classpath"/>
    </javadoc>

  </target>


  <!-- ==================== Create Binary Distribution ==================== -->


  <target name="dist" depends="docs"
   description="Create binary distribution">

    <mkdir     dir="${dist.home}"/>
    <copy    todir="${dist.home}">
      <fileset dir="${basedir}" includes="*.txt build.*"
                                excludes="build.properties"/>
    </copy>

    <mkdir     dir="${dist.home}/conf"/>
    <copy    todir="${dist.home}/conf">
      <fileset dir="${build.home}/conf" includes="*.tld"/>
    </copy>

    <mkdir     dir="${dist.home}/lib"/>
    <copy    todir="${dist.home}/lib">
      <fileset dir="${build.home}/lib" includes="*.jar"/>
    </copy>

    <mkdir     dir="${dist.home}/src"/>
    <copy    todir="${dist.home}/src">
      <fileset dir="src" excludes="**/.svn/**"/>
    </copy>

  </target>


  <!-- ========================= Unit Tests ================================ -->


  <target         name="test:compile" depends="library"
           description="Compile library unit tests">

    <mkdir         dir="${build.home}/test-classes"/>

    <!-- Compile Java Sources -->
    <javac      srcdir="src/test"
               destdir="${build.home}/test-classes"
                 debug="${compile.debug}"
           deprecation="${compile.deprecation}"
              optimize="${compile.optimize}">
      <classpath refid="test.classpath" />
    </javac>

    <!-- Copy non-Java Sources -->
    <copy        todir="${build.home}/test-classes">
      <fileset     dir="src/test">
        <exclude  name="**/*.java"/>
      </fileset>
    </copy>

  </target>


  <target         name="test" depends="test:compile"
           description="Execute library unit tests">

    <junit        fork="yes"
           haltonerror="${test.haltonerror}"
         haltonfailure="${test.haltonfailure}"
          printSummary="no">

      <classpath refid="test.classpath"/>
      <formatter  type="plain"
               usefile="false"/>
      <batchtest  fork="yes">
        <fileset   dir="${build.home}/test-classes"
              includes="org/apache/struts/faces/*/*TestCase.class"/>
      </batchtest>

    </junit>

  </target>


</project>
